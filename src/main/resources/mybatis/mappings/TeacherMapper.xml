<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.demo.demo01.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.spring.demo.demo01.entity.Teacher">
    <id column="id" jdbcType="TINYINT" property="id" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="deptNum" jdbcType="TINYINT" property="deptnum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.spring.demo.demo01.entity.Teacher">
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, first_name, sex, subject, deptNum
  </sql>
  <sql id="Blob_Column_List">
    comment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.spring.demo.demo01.entity.TeacherExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.spring.demo.demo01.entity.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from teacher
    where id = #{id,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from teacher
    where id = #{id,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.spring.demo.demo01.entity.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.spring.demo.demo01.entity.Teacher">
    insert into teacher (id, first_name, sex, 
      subject, deptNum, comment
      )
    values (#{id,jdbcType=TINYINT}, #{firstName,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{subject,jdbcType=VARCHAR}, #{deptnum,jdbcType=TINYINT}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spring.demo.demo01.entity.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="deptnum != null">
        deptNum,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=TINYINT},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="deptnum != null">
        #{deptnum,jdbcType=TINYINT},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.spring.demo.demo01.entity.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=TINYINT},
      </if>
      <if test="record.firstName != null">
        first_name = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.deptnum != null">
        deptNum = #{record.deptnum,jdbcType=TINYINT},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update teacher
    set id = #{record.id,jdbcType=TINYINT},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=VARCHAR},
      deptNum = #{record.deptnum,jdbcType=TINYINT},
      comment = #{record.comment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set id = #{record.id,jdbcType=TINYINT},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=VARCHAR},
      deptNum = #{record.deptnum,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.demo.demo01.entity.Teacher">
    update teacher
    <set>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="deptnum != null">
        deptNum = #{deptnum,jdbcType=TINYINT},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.spring.demo.demo01.entity.Teacher">
    update teacher
    set first_name = #{firstName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      subject = #{subject,jdbcType=VARCHAR},
      deptNum = #{deptnum,jdbcType=TINYINT},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.demo.demo01.entity.Teacher">
    update teacher
    set first_name = #{firstName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      subject = #{subject,jdbcType=VARCHAR},
      deptNum = #{deptnum,jdbcType=TINYINT}
    where id = #{id,jdbcType=TINYINT}
  </update>
</mapper>